apply plugin: 'com.android.application'

android {

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        compileSdkVersion rootProject.ext.compileSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion
        minSdkVersion rootProject.ext.minimumSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 18
        versionName "3.2"
        testApplicationId "com.readtracker.android.test"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            /*
               Values below should be defined in: ~/.gradle/gradle.properties
               READTRACKER_RELEASE_STORE_FILE={path to your keystore}
               READTRACKER_RELEASE_STORE_PASSWORD=*****
               READTRACKER_RELEASE_KEY_ALIAS=*****
               READTRACKER_RELEASE_KEY_PASSWORD=*****
             */

            // Let the presences of READTRACKER_RELEASE_STORE_FILE serve as an indicator that
            // gradle.properties is setup properly.
            if(project.hasProperty('READTRACKER_RELEASE_STORE_FILE')) {
                storeFile file(READTRACKER_RELEASE_STORE_FILE)
                storePassword READTRACKER_RELEASE_STORE_PASSWORD
                keyAlias READTRACKER_RELEASE_KEY_ALIAS
                keyPassword READTRACKER_RELEASE_KEY_PASSWORD
            } else {
                throw new RuntimeException("Gradle configuration not properly setup for signing. " +
                        "See app/build.gradle for more info")
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    sourceSets {
        test {
            resources {
                srcDirs = ['src/test/assets']
            }
        }
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.j256.ormlite:ormlite-android:$rootProject.ext.ormLiteVersion"
    compile "com.j256.ormlite:ormlite-core:$rootProject.ext.ormLiteVersion"
    compile "com.squareup.picasso:picasso:$rootProject.ext.picassoVersion"
    compile "com.squareup:otto:$rootProject.ext.ottoVersion"
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    compile files('lib/annotations.jar')
    testCompile "org.skyscreamer:jsonassert:$rootProject.ext.jsonAssertVersion"
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.robolectric:robolectric:$rootProject.ext.roboelectricVersion"
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
}